!function(window,angular,undefined){"use strict";angular.module("angular-img-lazy-load",[]).config(function($provide){$provide.decorator("ngSrcDirective",["$delegate",function($delegate){return $delegate.shift(),$delegate}])}).directive("ngSrc",function($window,$document){function LazyImage(element){function isVisible(windowHeight,windowWidth){var rect=element[0].getBoundingClientRect();return rect.bottom>=0&&rect.right>=0&&rect.top<=windowHeight&&rect.left<=windowWidth}function render(){isRendered=!0,renderSource()}function setSource(newSource){source=newSource,isRendered&&renderSource()}function setLoadingClass(){element.addClass("lazy-unloaded-image")}function unsetLoadingClass(){element.removeClass("lazy-unloaded-image"),element.addClass("lazy-loaded-image")}function addRepositionEvent(){element.bind("imageRepositioned",lazyLoader.recheckImages)}function renderSource(){element[0].src=source}var source=null,isRendered=!1;return{isVisible:isVisible,render:render,setSource:setSource,setLoadingClass:setLoadingClass,unsetLoadingClass:unsetLoadingClass,addRepositionEvent:addRepositionEvent}}var lazyLoader=function(){function addImage(image){image.setLoadingClass(),image.addRepositionEvent(),images.push(image),renderTimer||startRenderTimer(),isWatchingWindow||startWatchingWindow()}function removeImage(image){for(var i=0;i<images.length;i++)if(images[i]===image){images.splice(i,1);break}images.length||(clearRenderTimer(),stopWatchingWindow())}function checkDocumentHeight(){if(!renderTimer){var currentDocumentHeight=doc.prop("offsetHeight");currentDocumentHeight!==documentHeight&&(documentHeight=currentDocumentHeight,startRenderTimer())}}function checkImages(){for(var visible=[],hidden=[],windowHeight=win[0].innerHeight||doc[0].documentElement.clientHeight,windowWidth=win[0].innerWidth||doc[0].documentElement.clientWidth,i=0;i<images.length;i++){var image=images[i];image.isVisible(windowHeight,windowWidth)?(visible.push(image),image.unsetLoadingClass()):hidden.push(image)}for(var i=0;i<visible.length;i++)visible[i].render();images=hidden,clearRenderTimer(),images.length||stopWatchingWindow()}function clearRenderTimer(){clearTimeout(renderTimer),renderTimer=null}function startRenderTimer(){renderTimer=setTimeout(checkImages,renderDelay)}function startWatchingWindow(){isWatchingWindow=!0,win.bind("resize",windowChanged),win.bind("scroll",windowChanged),documentTimer=setInterval(checkDocumentHeight,documentDelay)}function stopWatchingWindow(){isWatchingWindow=!1,win.unbind("resize",windowChanged),win.unbind("scroll",windowChanged),clearInterval(documentTimer)}function windowChanged(){renderTimer||startRenderTimer()}var images=[],renderTimer=null,renderDelay=100,win=angular.element($window),doc=$document,documentHeight=doc.prop("offsetHeight"),documentTimer=null,documentDelay=2e3,isWatchingWindow=!1;return{addImage:addImage,removeImage:removeImage,recheckImages:windowChanged}}();return{restrict:"A",priority:99,link:function($scope,$element,$attrs){var lazyImage=new LazyImage($element);lazyLoader.addImage(lazyImage),$attrs.$observe("ngSrc",function(newSource){lazyImage.setSource(newSource)}),$scope.$on("$destroy",function(){lazyLoader.removeImage(lazyImage)})}}})}(window,window.angular);
//# sourceMappingURL=../dist/angular-img-lazy-load.js.map